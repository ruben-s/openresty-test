server {
    listen 8080;
    server_name localhost;

    location / {
        access_by_lua_block {
            local opts = {
                redirect_url = os.getenv("OIDC_REDIRECT_APP"),
                redirect_uri_scheme = "https",
                discovery = os.getenv("OIDC_DISCOVERY"),
                client_id = os.getenv("OIDC_CLIENT_SECRET"),
                ssl_verify = "no",
                scope = "openid profile"
            }

        local res, err = require("resty.openidc").authenticate(opts)

        if err then
            ngx.status = 500
            ngx.say(err)
            ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
        end

        if (res.user.cfGroups ~= "blah" and
            res.user.cgGroups ~= "foo") then
            ngx.exit(ngx.HTTP_FORBIDDEN)
        end

        ngx.res.set_header("X-USER", res.id_token.sub)

        }

    proxy_set_header    Host $host;
    proxy_set_header    X-Real-IP $remote_addr;
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_buffering     on;
    proxy_http_version  1.1;
    #also require websocket:
    proxy_set_header    Upgrade $http_upgrade;
    proxy_set_header    Connection "upgrade";
    proxy_read_timeout  86400;
    proxy_pass          http://localhost:80;    
    }
}